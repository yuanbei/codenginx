<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.2.3
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>HTTP Insroduce - By 元悲</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    <link rel="stylesheet" media="print" href="./css/pdf.css">
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>HTTP 协议简介</h1>
<h2>演讲者：元悲</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>Outline</h2>
<ol>
<li>HTTP 协议初探</li>
<li>HTTP 协议重要的组成部分</li>
<li>HTTP/2 简介</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>HTTP 协议初探</h2>
<p>用户在地址栏中输入URL，到页面最终被加载完成。将会经历以下几个过程。</p>
<ol>
<li>Parse URL.</li>
<li>Init REQUEST MESSAGE.</li>
<li>Send request message to server.[dns resolve, tcp three way handshake]</li>
<li>Recieve the first RESPONSE MESSAGE from server.</li>
<li>Parse html as mainframe.</li>
<li>Send subresource requests which parsed from step 5.</li>
<li>Build DOM,CSSOM,BOM.</li>
<li>Render the page. [Layout,Paint,Event Route]</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>URI, URL, URN</h2>
<p>  URI: URI是以某种统一的（标准化的）方式标识资源的简单字符串,英文全称为（Uniform
Resource Indentifier, URI).
  URL:
  URN:
  <strong>URL, URN是URI的两种不同的实现形式。</strong></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>URL 的构成</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>REQUEST message &amp;&amp; RESPONSE message</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>HTTP Status Code</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>History of HTTP</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>HTTP 协议重要的组成部分</h2>
<h3>Cache</h3>
<ol>
<li>cache control 用的关键组件</li>
<li>缓存验证过程（简要介绍）</li>
<li>Refresh &amp;&amp; Reload ，地址栏回车, Forward, Backword</li>
<li>Chromium 缓存组成部分（HTTP 缓存，web kit 缓存，差异）</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>连接管理</h2>
<ol>
<li>Origin (protocol ,scheme, port&gt;</li>
<li>Chromium  Socket Manager &amp;&amp;  Socket pool</li>
<li>并行连接</li>
<li>持久化连接 keep alive</li>
<li>管道化连接</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>代理</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>Cookie</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>HTTP/2</h2>
<ol>
<li>History &amp;&amp; Spdy</li>
<li>HTTP协议要解决的主要问题</li>
<li>协议介绍（图解)</li>
<li>连接复用(one Origin one connect)</li>
<li>请求优先级</li>
<li>首部压缩</li>
<li>Server Push</li>
<li>SSL 是否是必须的？</li>
<li>ALPN</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>参考资料</h2>
<ol>
<li>RFC</li>
<li>HTTP 权威指南</li>
<li><a href="http://chimera.labs.oreilly.com/books/1230000000545/index.html" target="_blank">High Perfermance Browser Network</a></li>
<li>Chromium Network</li>
</ol>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<h2>Q&amp;A</h2>

</article></section></slide>
        <!--slide class="slide thank-you-slide segue nobackground">
            <article class="flexbox vleft auto-fadein">
                <h2>Q &amp; A</h2>
                <h3>&lt;Thank You!&gt;</h3>
            </article>
        </slide-->
        <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
              <h2 style="color: white;">Powered By nodePPT v1.2.3</h2>
            </article>
          </slide>
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = location.pathname.split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'cards',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/hljs-0.8.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./js/demo.js"></script>
<link rel="stylesheet" href="./css/moon.css">
<link rel="stylesheet" href="./css/theme.moon.css">
<!--placeholder-->
</body>
</html>
